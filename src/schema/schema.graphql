# คือการเขียน schema อีกวิธีนึง
type Query {
  user: User
  users: [User]!
  product(id: ID!): Product
  products: [Product]!
  productCategories: [ProductCategory]!
  productCategory(id: ID!): ProductCategory
  productAttributes: [ProductAttribute]!
  pd_options_attrs: [PD_options_attr]!
  fav_products: [FavItem]!
  filterProducts(search: String, page: Float, limit: Float): filterProducts
}

type Mutation {
  login(email: String!, password: String!): AuthData

  edit_account_user(
    id: ID!
    name: String
    tel: String
    line_id: String
    address: String
    image_profile: String
  ): User

  requestResetPassword(email: String!): Massage!

  resetResetPassword(password: String!, token: String!): Massage!

  signup(
    username: String!
    name: String!
    email: String!
    password: String!
  ): User

  createProduct(
    name: String!
    description: String!
    address: String!
    reason_sell: String
    price: Float!
    pd_life: Float!
    integrity: Float!
    imageUrl: String!
    image_gallery: [String]
    productCategory: String!
    pd_options_attr: [String]
  ): Product!

  createProductCategory(
    slug: String!
    description: String!
    name: String!
    imageUrl: String!
  ): ProductCategory!

  createProductAttribute(
    slug: String!
    description: String!
    name: String!
    imageUrl: String!
  ): ProductAttribute!

  createOptionsAttr(
    slug: String!
    name: String!
    opVal: String!
  ): PD_options_attr!

  updateProduct(
    id: ID!
    name: String
    description: String
    address: String
    reason_sell: String
    price: Float
    pd_life: Float
    integrity: Float
    imageUrl: String
    image_gallery: [String]
    productCategory: String
    pd_options_attr: [String]
    user_view: Float
    user_like: Float
  ): Product!

  addToCart(id: ID!): FavItem!

  deleteCart(id: ID!): FavItem!

  deleteProduct(id: ID!): Product!
}

scalar Date

type User {
  id: ID!
  username: String!
  name: String!
  email: String!
  tel: String
  line_id: String
  address: String
  image_profile: String
  # password: String!
  qty_products: Float
  qty_fav_products: Float
  productCategories: [ProductCategory]
  products: [Product]
  fav_products: [FavItem]!
  createdAt: Date!
}

type Product {
  id: ID!
  description: String!
  address: String!
  reason_sell: String
  name: String!
  price: Float!
  pd_life: Float!
  integrity: Float!
  imageUrl: String!
  image_gallery: [String]
  user: User!
  productCategory: ProductCategory!
  pd_options_attr: [PD_options_attr]!
  createdAt: Date!
  user_view: Float
  user_like: Float
}

type ProductCategory {
  id: ID!
  slug: String!
  description: String!
  name: String!
  imageUrl: String!
  quantity: Float
  products: [Product]
  user: User!
}

type ProductAttribute {
  id: ID!
  slug: String!
  description: String!
  pd_options_attrs: [PD_options_attr]
  name: String!
  imageUrl: String!
  quantity: Int!
  products: [Product]
  user: User!
}

type PD_options_attr {
  id: ID!
  slug: String!
  name: String!
  opVal: String!
  quantity: Float
  parentName: String!
  parent: ProductAttribute
  products: [Product]
}

type FavItem {
  id: ID!
  product: Product!
  user: User!
  quantity: Float
  createdAt: Date!
}

type AuthData {
  user: User
  jwt: String
}
type Massage {
  message: String!
}

type filterProducts {
  products: [Product]
  total: Float
  curentPage: Float
}
